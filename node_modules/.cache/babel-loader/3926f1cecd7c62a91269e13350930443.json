{"ast":null,"code":"'use strict';\n\nvar compactField = require('./field_compactor');\n\nfunction stringifyField(arr, min, max) {\n  var ranges = compactField(arr);\n\n  if (ranges.length === 1) {\n    var singleRange = ranges[0];\n    var step = singleRange.step;\n\n    if (step === 1 && singleRange.start === min && singleRange.end === max) {\n      return '*';\n    }\n\n    if (step !== 1 && singleRange.start === min && singleRange.end === max - step + 1) {\n      return '*/' + step;\n    }\n  }\n\n  var result = [];\n\n  for (var i = 0, l = ranges.length; i < l; ++i) {\n    var range = ranges[i];\n\n    if (range.count === 1) {\n      result.push(range.start);\n      continue;\n    }\n\n    var step = range.step;\n\n    if (range.step === 1) {\n      result.push(range.start + '-' + range.end);\n      continue;\n    }\n\n    var multiplier = range.start == 0 ? range.count - 1 : range.count;\n\n    if (range.step * multiplier > range.end) {\n      result = result.concat(Array.from({\n        length: range.end - range.start + 1\n      }).map(function (_, index) {\n        var value = range.start + index;\n\n        if ((value - range.start) % range.step === 0) {\n          return value;\n        }\n\n        return null;\n      }).filter(function (value) {\n        return value != null;\n      }));\n    } else if (range.end === max - range.step + 1) {\n      result.push(range.start + '/' + range.step);\n    } else {\n      result.push(range.start + '-' + range.end + '/' + range.step);\n    }\n  }\n\n  return result.join(',');\n}\n\nmodule.exports = stringifyField;","map":null,"metadata":{},"sourceType":"script"}